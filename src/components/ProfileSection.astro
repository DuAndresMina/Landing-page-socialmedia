---
interface Props {
  imageUrl: string;
  name: string;
  description: string;
}

const { imageUrl, name, description } = Astro.props;
---

<section class="min-h-screen flex flex-col items-center justify-center relative overflow-hidden">
  <div class="absolute inset-0 bg-gradient-to-b from-pink-100 to-purple-200 animate-gradient"></div>
  <div class="floating-hearts"></div>
  
  <div class="z-10 text-center">
    <img
      src={imageUrl}
      alt={name}
      class="w-48 h-48 rounded-full border-4 border-white shadow-lg mb-6 mx-auto"
    />
    <h1 class="text-4xl font-bold text-gray-800 mb-4">{name}</h1>
    <p class="text-xl text-gray-600 max-w-md mx-auto px-4">{description}</p>
  </div>
</section>

<style>
  .animate-gradient {
    background-size: 400% 400%;
    animation: gradient 15s ease infinite;
  }

  @keyframes gradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  .floating-hearts {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
  }

  .floating-hearts::before {
    content: "ðŸ’–";
    position: absolute;
    font-size: 20px;
    animation: float 6s linear infinite;
    opacity: 0;
  }

  @keyframes float {
    0% {
      transform: translateY(100vh) translateX(random(100) * 1vw);
      opacity: 1;
    }
    100% {
      transform: translateY(-20vh) translateX(calc(random(100) * 1vw + 50px));
      opacity: 0;
    }
  }
</style>